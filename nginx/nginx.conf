user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  text/html;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    log_format devlogging '$remote_addr - $remote_user [$time_local]\n'
    '"proxy_host" $proxy_host\n'
    '"https" $https\n'
    '"proxy_add_x_forwarded_for" $proxy_add_x_forwarded_for\n'
    '"upstream_addr" $upstream_addr\n'
    '"proxy_protocol_addr" $proxy_protocol_addr\n'
    '"proxy_protocol_port" $proxy_protocol_port\n'
    '"proxy_protocol_server_addr" $proxy_protocol_server_addr\n'
    '"request_uri" $request_uri\n'
    '"request" $request\n'
    '"http_x_forwarded_for" $http_x_forwarded_for\n'
    '"status" $status\n'
    '"args" $args';

    # redirect everything to https
    server {
        listen 80;
        server_name         robxtask.salzburgresearch.at;
        return 301 https://$host$request_uri;
    }

    # separate server for keycloak only
    server {
        listen 8443 ssl;
        server_name         robxtask.salzburgresearch.at;
        ssl_certificate     /etc/certs/robxtask.salzburgresearch.at.crt;
        ssl_certificate_key /etc/certs/robxtask.salzburgresearch.at.key;

        access_log /dev/stdout main;

        location / {
            proxy_pass          http://keycloak:8080/;
            proxy_set_header    Host $host:$server_port;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_busy_buffers_size   512k;
            proxy_buffers       4 512k;
            proxy_buffer_size   256k;
        }
    }

#    # separate server for kibana only
#    server {
#        listen 5601 ssl;
#        server_name         robxtask.salzburgresearch.at;
#        ssl_certificate     /etc/certs/robxtask.salzburgresearch.at.chained.crt;
#        ssl_certificate_key /etc/certs/robxtask.salzburgresearch.at.key;
#
#        access_log /dev/stdout main;
#
#        location / {
#            auth_basic "Private Kibana";
#            auth_basic_user_file /etc/nginx/htpasswd;
#            proxy_pass          http://kibana:5601/;
#            proxy_set_header    Host $host:$server_port;
#            proxy_set_header    X-Forwarded-Proto $scheme;
#        }
#    }

     # according to: https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/
    upstream jenkins {
        keepalive 32; # keepalive connections
        server jenkins_master:8080; # jenkins ip and port
    }

    # Required for Jenkins websocket agents
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 443 ssl;
        server_name         robxtask.salzburgresearch.at;
        ssl_certificate     /etc/certs/robxtask.salzburgresearch.at.crt;
        ssl_certificate_key /etc/certs/robxtask.salzburgresearch.at.key;

        client_max_body_size 400M;
        proxy_read_timeout      1000;
        proxy_connect_timeout   1000;
        proxy_send_timeout      1000;

        access_log /dev/stdout main;

        location / {
            # return 301 https://www.salzburgresearch.at/projekt/robxtask/;
            rewrite ^/$ /de permanent;
            proxy_pass https://robxtask-wp.salzburgresearch.at;
        }

        location /robxtask {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            add_header Pragma "no-cache";
            add_header 'Access-Control-Allow-Origin' '*';
            proxy_http_version 1.1;
            proxy_request_buffering off;

            proxy_pass          http://gateway-proxy:80/;
            proxy_read_timeout      1000;
            proxy_connect_timeout   1000;
            proxy_send_timeout      1000;

        }

        location /jenkins/ {

            add_header Pragma "no-cache";

            # Fix the "It appears that your reverse proxy set up is broken" error.
            proxy_pass          http://jenkins_master:8080/jenkins/;
            proxy_read_timeout  90;

            proxy_redirect      http://jenkins_master:8080/ https://robxtask.salzburgresearch.at/jenkins/;

            # Required for Jenkins websocket agents
            proxy_set_header   Connection        $connection_upgrade;
            proxy_set_header   Upgrade           $http_upgrade;

            proxy_set_header   Host              $host;
            proxy_set_header   X-Forwarded-Port  $server_port;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_max_temp_file_size 0;

            #this is the maximum upload size
            client_max_body_size       10m;
            client_body_buffer_size    128k;

        
            # Required for new HTTP-based CLI
            proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_buffering            off;
            proxy_set_header Connection ""; # Clear for keepalive
            # workaround for https://issues.jenkins-ci.org/browse/JENKINS-45651
            add_header 'X-SSH-Endpoint' 'https://robxtask.salzburgresearch.at/jenkins/' always;
        }

        # optional location for solr
        location /solr/ {
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_read_timeout      1000;
            proxy_connect_timeout   1000;
            proxy_send_timeout      1000;

            proxy_buffering         on;
            proxy_pass              http://solr:8983;

            auth_basic              "SOLR Admin Area";
            auth_basic_user_file    /etc/nginx/htpasswd;
        }

        # optional location for mongo-express
        location /mongo-express/ {
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_read_timeout      1000;
            proxy_connect_timeout   1000;
            proxy_send_timeout      1000;

            proxy_buffering         on;
            proxy_pass              http://staging-mongo-express:8081;

        }

        # optional location for device-registration
        location /devreg/ {
            proxy_pass              http://simple-registration-service:5000/;
            sub_filter 'url: "/static/v1/swagger.json"'  'url: "/devreg/static/v1/swagger.json"';
            auth_basic              "SIMPLE DEVICE REGISTRATION";
            auth_basic_user_file    /etc/nginx/htpasswd;
        }
    }
}
